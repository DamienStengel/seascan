import { Signalement, Event, User } from '@/types';

/**
 * Donn√©es mock√©es pour l'application Oc√©aPulse
 * Ces donn√©es servent √† simuler une API backend pour la d√©mo
 */

// Signalements mock√©s
export const mockReports: Signalement[] = [
  {
    id: 1,
    type: 'D√©versement de carburant',
    location: 'Plage de la Salie',
    time: 'Il y a 2 heures',
    status: 'Tr√®s urgent',
    imageUrl: '/api/placeholder/80/80?text=D√©versement',
    description: 'D√©versement important de carburant observ√© pr√®s de la c√¥te. Une nappe noire s\'√©tend sur environ 50 m√®tres. Risque majeur pour les oiseaux marins et la faune aquatique.',
    latitude: 44.6205,
    longitude: -1.1887,
    categories: ['Toxique', 'Hydrocarbures']
  },
  {
    id: 2,
    type: 'D√©chets plastiques',
    location: 'C√¥te des Basques',
    time: 'Il y a 5 heures',
    status: 'Urgent',
    imageUrl: '/api/placeholder/80/80?text=Plastiques',
    description: 'Accumulation de d√©chets plastiques sur la plage, principalement des bouteilles et des emballages. Zone d\'environ 20m¬≤ tr√®s pollu√©e.',
    latitude: 43.4789,
    longitude: -1.5686,
    categories: ['Plastique', 'D√©chets divers']
  },
  {
    id: 3,
    type: 'Filets abandonn√©s',
    location: 'Port de Capbreton',
    time: 'Hier',
    status: 'En cours',
    imageUrl: '/api/placeholder/80/80?text=Filets',
    description: 'Filets de p√™che abandonn√©s ou perdus, emm√™l√©s autour des rochers. Danger potentiel pour la faune marine, risque d\'enchev√™trement.',
    latitude: 43.6435,
    longitude: -1.4468,
    categories: ['Mat√©riel de p√™che', 'Filets']
  },
  {
    id: 4,
    type: 'M√©duses en nombre',
    location: 'Plage du Petit Nice',
    time: 'Aujourd\'hui',
    status: 'Information',
    imageUrl: '/api/placeholder/80/80?text=M√©duses',
    description: 'Pr√©sence importante de m√©duses sur la plage et dans l\'eau. Baignade d√©conseill√©e pour les enfants et personnes sensibles.',
    latitude: 44.5652,
    longitude: -1.2009,
    categories: ['Ph√©nom√®ne naturel']
  },
  {
    id: 5,
    type: '√ârosion critique',
    location: 'Dune du Pilat',
    time: 'Il y a 3 jours',
    status: 'Pr√©occupant',
    imageUrl: '/api/placeholder/80/80?text=√ârosion',
    description: '√ârosion importante observ√©e au pied de la dune. Risque d\'effondrement de portions de la dune apr√®s les derni√®res temp√™tes.',
    latitude: 44.5869,
    longitude: -1.2144,
    categories: ['√ârosion', 'Dunes']
  },
  {
    id: 6,
    type: 'Algues toxiques',
    location: 'Plage de Contis',
    time: 'Il y a 1 semaine',
    status: 'R√©solu',
    imageUrl: '/api/placeholder/80/80?text=Algues',
    description: 'Prolif√©ration d\'algues potentiellement toxiques. La situation est maintenant sous contr√¥le et la plage a √©t√© nettoy√©e.',
    latitude: 44.0849,
    longitude: -1.3234,
    categories: ['Algues', 'Toxique']
  }
];

// √âv√©nements mock√©s
export const mockEvents: Event[] = [
  {
    id: 1,
    title: 'Nettoyage de plage',
    location: 'Plage du Grand Crohot',
    month: 'JUN',
    day: '15',
    participants: 17,
    maxParticipants: 30,
    description: 'Venez participer √† notre action de nettoyage des plages. Mat√©riel fourni, pr√©voir des v√™tements adapt√©s et une bouteille d\'eau.',
    date: new Date(2023, 5, 15),
    organizer: 'Association Oc√©anVie',
    imageUrl: '/api/placeholder/300/150?text=Nettoyage'
  },
  {
    id: 2,
    title: 'Sensibilisation aux oc√©ans',
    location: 'M√©diath√®que de Biarritz',
    month: 'JUN',
    day: '22',
    participants: 9,
    maxParticipants: 20,
    description: 'Conf√©rence sur l\'importance de pr√©server nos oc√©ans et les gestes quotidiens pour r√©duire la pollution marine.',
    date: new Date(2023, 5, 22),
    organizer: 'Mairie de Biarritz',
    imageUrl: '/api/placeholder/300/150?text=Conf√©rence'
  },
  {
    id: 3,
    title: 'Formation √† la biodiversit√©',
    location: 'R√©serve naturelle du Courant d\'Huchet',
    month: 'JUL',
    day: '05',
    participants: 12,
    maxParticipants: 15,
    description: 'Apprenez √† identifier les esp√®ces locales et comprendre l\'impact de la pollution sur la biodiversit√© marine.',
    date: new Date(2023, 6, 5),
    organizer: 'Guides naturalistes',
    imageUrl: '/api/placeholder/300/150?text=Formation'
  },
  {
    id: 4,
    title: 'Plantation de v√©g√©tation dunaire',
    location: 'Lacanau Oc√©an',
    month: 'JUL',
    day: '18',
    participants: 5,
    maxParticipants: 25,
    description: 'Participez √† la restauration et au renforcement des dunes par la plantation d\'esp√®ces adapt√©es.',
    date: new Date(2023, 6, 18),
    organizer: 'Conservatoire du littoral',
    imageUrl: '/api/placeholder/300/150?text=Plantation'
  }
];

// Utilisateurs mock√©s
export const mockUsers: User[] = [
  {
    id: 'mock-user-1',
    firstName: 'Jean',
    lastName: 'Dupont',
    email: 'jean.dupont@example.com',
    profilePicture: '/api/placeholder/100/100?text=JD',
    badges: [
      { id: 1, name: 'Protecteur des oc√©ans', icon: 'üåä', dateObtained: new Date(2023, 5, 15) },
      { id: 2, name: 'Observateur d√©butant', icon: 'üëÅÔ∏è', dateObtained: new Date(2023, 6, 20) }
    ],
    stats: {
      signalements: 12,
      participations: 5,
      points: 320,
      niveau: 'D√©butant'
    }
  },
  {
    id: 'mock-user-2',
    firstName: 'Marie',
    lastName: 'Martin',
    email: 'marie.martin@example.com',
    profilePicture: '/api/placeholder/100/100?text=MM',
    badges: [
      { id: 1, name: 'Protecteur des oc√©ans', icon: 'üåä', dateObtained: new Date(2023, 4, 10) },
      { id: 3, name: 'Nettoyeur exp√©riment√©', icon: 'üßπ', dateObtained: new Date(2023, 7, 5) }
    ],
    stats: {
      signalements: 8,
      participations: 12,
      points: 450,
      niveau: 'Interm√©diaire'
    }
  }
];

// API mock√©e pour remplacer les appels backend
// Ces fonctions simulent des appels asynchrones √† une API
export const mockAPI = {
  // R√©cup√©rer tous les signalements
  getReports: (): Promise<Signalement[]> => {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(mockReports);
      }, 800); // D√©lai simul√© de 800ms
    });
  },
  
  // R√©cup√©rer un signalement par son ID
  getReportById: (id: number): Promise<Signalement | undefined> => {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(mockReports.find(report => report.id === id));
      }, 500); // D√©lai simul√© de 500ms
    });
  },
  
  // Ajouter un nouveau signalement
  addReport: (report: Omit<Signalement, 'id'>): Promise<Signalement> => {
    return new Promise((resolve) => {
      setTimeout(() => {
        const newReport = {
          ...report,
          id: mockReports.length + 1, // G√©n√©ration d'un ID simple
          time: '√Ä l\'instant'
        };
        mockReports.push(newReport as Signalement);
        resolve(newReport as Signalement);
      }, 1000); // D√©lai simul√© de 1000ms
    });
  },
  
  // R√©cup√©rer tous les √©v√©nements
  getEvents: (): Promise<Event[]> => {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(mockEvents);
      }, 800); // D√©lai simul√© de 800ms
    });
  },
  
  // Participer √† un √©v√©nement
  joinEvent: (eventId: number, userId: string): Promise<Event> => {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        const event = mockEvents.find(e => e.id === eventId);
        if (!event) {
          reject(new Error('√âv√©nement non trouv√©'));
          return;
        }
        
        if (event.participants >= event.maxParticipants) {
          reject(new Error('√âv√©nement complet'));
          return;
        }
        
        event.participants += 1;
        resolve(event);
      }, 700); // D√©lai simul√© de 700ms
    });
  }
};

// Helper pour g√©n√©rer des placeholders d'images
export const getImagePlaceholder = (width: number, height: number, text: string): string => {
  return `/api/placeholder/${width}/${height}?text=${encodeURIComponent(text)}`;
}; 